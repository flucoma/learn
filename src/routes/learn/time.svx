---
title: Dealing with Time
author: James
blurb: |
    Strategies for encoding and explaining time to a computer.
tags:
    - time
    - smoothing
    - descriptors
    - audio descriptors
    - statistics
flair: tutorial
featuredimage: /learn/for-featured-images/2D-corpus-explorer.png
---

<script>
    import NoiseShape from '$lib/widget/time/NoiseShape.svelte';
    import PitchShape from '$lib/widget/time/PitchShape.svelte';
    import NoisePitchShape from '$lib/widget/time/NoisePitchShape.svelte';
</script>

## Introduction

When we analyse sound with computers, the notion of time is critical. For humans, listening is an incredibly complex process that bundles many physiological and psychological elements into a relatively passive and automatic process. We can identify different perceptual features of the sound simultaneously, understand intentions behind sound production, trace musical elements that evolve over time and come to interpretations that connect different listening experiences together. Computer's have no such understanding of sound and by comparison are really quite stupid when you compare them to what a human can do. What they are especially good at though is _quantitative_ listening, and generating numbers that may or may not faithfully express the nuances of sound evolving over time. You might be thinking, "Hey! You just described an audio descriptor", and you would be right. This set of learn articles is going to reflect on the tension between human and machine listening and how that effects the way we encode musical representation, specifically _time_ in data.

After reading the articles and resources, we hope that you feel empowered...

## Time, Evolution and Data

The fact that sound evolves over time is an inescapable facet of how we listen to and interpret it. Think about all the different ways that a sound may or may not vary and how this contributes so strongly to it's nature, ability to elicit different responses as a listener. One neat entry point is to start to describe sound with _curves_ and _shapes_. If you wanted to dive into a more theoretical approach to this way of thinking, then you might want to read about [Temporal Semiotic Units](https://www.labo-mim.org/site/index.php?2013/03/29/225-temporal-semiotic-units-tsus-a-very-short-introduction#:~:text=TSUs%20have%20been%20defined%20as,their%20dynamic%20pattern%20over%20time.).

Click the play button and listen to the sound. The line moving up and down over time maps onto the changes in amplitude or envelope.

<NoiseShape />

We could also describe other aspects like pitch.

<PitchShape />

The combination of many different curves that trace perceptual elements of a sound over time might culminate in a more holistic understanding of a sound. This is still quite simple, but imagine the amplitude and pitch moving together as a kind of _multivariate_ audio descriptor.

<NoisePitchShape />

Satisfying moving lines aside, this model of sound is still more simplistic than when we listen to a sound. As humans, we probably combine, layer and meld together multiple shapes simultaneously over different time scales, looking at small changes in the moment at the same time as considering the grander scheme of things. Considering this begins to unpick at the issue of encoding the evolving nature of sound into data. How much is time is "enough" to be meaningful? Is all time equal? How do bits of time relate to other bits of time?

This is really just the start of thinking about _time_ and the tutorial encapsulates a singular strategy for measuring the perceptual characteristics of a sound with audio descriptors and giving it to the computer to understand. In response to this, we've developed a series of [Learn Articles](/learn) that we think might provoke you to consider how you represent time through data, and how the evolution of sound can be captured and encoded into workflows with the FluCoMa toolkit.

[Smoothing](/learn/smoothing-data)
<!-- [Pitch Refinement](/learn/refining-pitch-analysis) -->
<!-- [LPT](/learn/lpt) -->




 
