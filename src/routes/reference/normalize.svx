---
title: Normalize
blurb: Normalize a FluidDataSet's contents
tags:
    - data
    - scaling
    - preprocessing
    - statistics
flair: reference
category: Analyse Data
---

<script>
    import DataSetView from '$lib/components/DataSetView.svelte';
    const one = [
        { "1" : [1] },
        { "2" : [2] },
        { "3" : [3] },
        { "4" : [4] },
        { "5" : [5] }
    ]

    const two = [
        { "1" : [0] },
        { "2" : [0.25] },
        { "3" : [0.5] },
        { "4" : [0.75] },
        { "5" : [1] }
    ]

    const three = [
        { "1" : [-12, 220] },
        { "2" : [-24, 440] },
        { "3" : [-36, 880] },
        { "4" : [-48, 1760] },
        { "5" : [-60, 3520] }
    ]

    const four = [
        { "1" : [1, 0] },
        { "2" : [0.75, 0.06667] },
        { "3" : [0.5, 0.2] },
        { "4" : [0.25, 0.46667] },
        { "5" : [0, 1] }
    ]
</script>

[Normalize]() helps us scale data in a [DataSet](/reference/dataset) from any input range to a _normal_ output range. Typically, a _normal_ range is between 0 and 1. However, these boundaries can be modified with the `min` and `max` parameters. A concise example of normalisation is shown below by applying it to a [DataSet](/reference/dataset) containing five points. The input data is shown on the left, and the normalised result is shown on the right. 

<div class='io'>
    <DataSetView data={one} />
    <div class='emoji'>
        <div class='arrow'>→</div>
    </div>
    <DataSetView data={two} />
</div>

When there are multple columns of data, normalisation is applied _per column_. This preserves the relationship of data within a column across all points, but will alter the shape of the data across the point. In the example below, we might imagine the first column is [Loudness](/reference/loudness) in dB, and the second column is [Pitch](/reference/pitch) in hertz. Observe the differences in range between the first and second column _after_ normalisation.

<div class='io'>
    <DataSetView data={three} />
    <div class='emoji'>
        <div class='arrow'>→</div>
    </div>
    <DataSetView data={four} />
</div>

<style>
    .io {
        display: flex;
        flex-direction: row;
        gap: 1em;
    }

    .emoji {
        display: grid;
        place-items: center;
        font-size: 5rem;
    }


    @media (max-width: 550px) {
        .io {
            display: flex;
            flex-direction: column;
            justify-content: left;
            gap: 0;
        }

        .emoji {
            justify-content: left;
        }

        .arrow {
            -webkit-transform: rotate(90deg);
            -moz-transform: rotate(90deg);
            -o-transform: rotate(90deg);
            -ms-transform: rotate(90deg);
            transform: rotate(90deg);
        }
    }
</style>

