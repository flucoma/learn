---
title: DataSet
blurb: An associative data container
tags: 
    - utlity
    - data
related:
    - labelset
flair: reference
category: Analyse Data
---

<script>
    import DataSetView from '$lib/components/DataSetView.svelte';
    
    const rng = (numItems) => {
        let arr = new Array(numItems).fill(0.0)
        arr = arr.map(i => Math.random())
        return arr
    }
    let dataset = [
        { 'guitar' : rng(5) },
        { 'synth' : rng(5) },
        { 'trombone' : rng(5) },
        { 'saxophone' : rng(5) },
        { 'noise' : rng(5) }
    ]
</script>

The [DataSet](/reference/dataset) is an important object in the second FluCoMa toolbox. Whenever there is a need to create a collection of data (such as for input to a machine learning process), or to make a provision for some output, [DataSet](/reference/dataset) is the tool that you'll want to reach for. 

The [DataSet](/reference/dataset) starts out empty and we add any number of _points_ to it. A point is made up of two bits of information: an _identifier_ and some _data_. The _data_ is any number of numerical bits of information stored in a buffer. The _identifier_ is a string or symbol which is _associated_ to the _data_. If you have used the `coll`, `dict`, `text` or `Dictionary` objects in your environment of choice you will already be familiar with this idea of storing data associatively. If you're not, you can think of it like a filing system. The identifier gives us a human-readable bit of information which we can use to look up the data that it is attached to.

A small [DataSet](/reference/dataset) is depicted below, with 5 points. Each identifier is an instrument name, and we might imagine the data associated to each of these identifiers could be descriptor values or parameters for example.

<DataSetView 
data={dataset}
/>

## Some Caveats to Remember

1. For each point, the data needs to be uniformly sized. In other words, if the first point you add to a [DataSet](/reference/dataset) dictates how many numbers each point's data can should have. If you added a point that had 10 numbers in the data, and then tried to add a new point with 3 numbers in the data it wouldn't work.

2. Identifiers are unique. You cannot have the same identifier twice in a single [DataSet](/reference/dataset).

3. When data is transformed and passed between many instances of FluCoMa objects, the identifiers are preserved meaning one can backtrack results from the end to the beginning of a processing pipeline.

## Usage

The help files in each environment are the best place to see the most common usage of the [DataSet](/reference/dataset) including adding, updating and deleting points.


